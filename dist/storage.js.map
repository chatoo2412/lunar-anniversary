{"version":3,"sources":["../src/storage.ts"],"names":["storageKey","clear","localStorage","setItem","JSON","stringify","getSaved","raw","getItem","parse","error","add","newItem","entries","newEntry","key","Date","now","item","newEntries","remove","filter","entry"],"mappings":"AAAA,MAAMA,UAAU,GAAG,WAAnB;AAYA,OAAO,MAAMC,KAAK,GAAG,MAAM;AACzBC,EAAAA,YAAY,CAACC,OAAb,CAAqBH,UAArB,EAAiCI,IAAI,CAACC,SAAL,CAAe,EAAf,CAAjC;AACD,CAFM;AAIP,OAAO,MAAMC,QAAQ,GAAG,MAAoB;AAC1C,MAAI;AACF,UAAMC,GAAG,GAAGL,YAAY,CAACM,OAAb,CAAqBR,UAArB,CAAZ;;AAEA,QAAI,CAACO,GAAL,EAAU;AACR,aAAO,EAAP;AACD;;AAED,WAAOH,IAAI,CAACK,KAAL,CAAWF,GAAX,CAAP;AACD,GARD,CAQE,OAAOG,KAAP,EAAc;AACdT,IAAAA,KAAK,GADS,CACL;;AAET,WAAO,EAAP;AACD;AACF,CAdM;AAgBP,OAAO,MAAMU,GAAG,GAAIC,OAAD,IAAwB;AACzC,QAAMC,OAAO,GAAGP,QAAQ,EAAxB;AAEA,QAAMQ,QAAoB,GAAG;AAC3BC,IAAAA,GAAG,EAAG,GAAEC,IAAI,CAACC,GAAL,EAAW,EADQ;AAE3BC,IAAAA,IAAI,EAAEN;AAFqB,GAA7B;AAKA,QAAMO,UAAU,GAAG,CAAC,GAAGN,OAAJ,EAAaC,QAAb,CAAnB;AAEAZ,EAAAA,YAAY,CAACC,OAAb,CAAqBH,UAArB,EAAiCI,IAAI,CAACC,SAAL,CAAec,UAAf,CAAjC;AAEA,SAAOL,QAAP;AACD,CAbM;AAeP,OAAO,MAAMM,MAAM,GAAIL,GAAD,IAAiB;AACrC,QAAMF,OAAO,GAAGP,QAAQ,EAAxB;AAEA,QAAMa,UAAU,GAAGN,OAAO,CAACQ,MAAR,CAAeC,KAAK,IAAIA,KAAK,CAACP,GAAN,KAAcA,GAAtC,CAAnB;AAEAb,EAAAA,YAAY,CAACC,OAAb,CAAqBH,UAArB,EAAiCI,IAAI,CAACC,SAAL,CAAec,UAAf,CAAjC;AACD,CANM","sourcesContent":["const storageKey = \"laEntries\";\n\ninterface ItemModel {\n  name: string;\n  lunarDate: { year: number; month: number; day: number };\n}\n\nexport interface EntryModel {\n  key: string;\n  item: ItemModel;\n}\n\nexport const clear = () => {\n  localStorage.setItem(storageKey, JSON.stringify([]));\n};\n\nexport const getSaved = (): EntryModel[] => {\n  try {\n    const raw = localStorage.getItem(storageKey);\n\n    if (!raw) {\n      return [];\n    }\n\n    return JSON.parse(raw);\n  } catch (error) {\n    clear(); // Reset compromized data.\n\n    return [];\n  }\n};\n\nexport const add = (newItem: ItemModel) => {\n  const entries = getSaved();\n\n  const newEntry: EntryModel = {\n    key: `${Date.now()}`,\n    item: newItem\n  };\n\n  const newEntries = [...entries, newEntry];\n\n  localStorage.setItem(storageKey, JSON.stringify(newEntries));\n\n  return newEntry;\n};\n\nexport const remove = (key: string) => {\n  const entries = getSaved();\n\n  const newEntries = entries.filter(entry => entry.key !== key);\n\n  localStorage.setItem(storageKey, JSON.stringify(newEntries));\n};\n"],"file":"storage.js"}